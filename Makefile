ALL_UNTRUSTED_MK=$(shell find . -name '*sgx_u.mk')
ALL_TRUSTED_MK=$(shell find . -name '*sgx_t.mk')
ALL_STATIC_MK=$(shell find . -name '*sgx_t_static.mk')
ALL_ORIGIN_MK = $(shell find . -name '*origin.mk')



.PHONY: all clean run

ifeq ($(Build_Mode), ORIGIN_BUILD)
all :
	$(foreach O_MK, $(ALL_ORIGIN_MK), $(MAKE) -C $(shell dirname $(O_MK))  -f $(shell basename $(O_MK)) $@;)

clean:
	$(foreach O_MK, $(ALL_ORIGIN_MK), $(MAKE) -C $(shell dirname $(O_MK))  -f $(shell basename $(O_MK)) $@;)

distclean:
	$(foreach O_MK, $(ALL_ORIGIN_MK), $(MAKE) -C $(shell dirname $(O_MK))  -f $(shell basename $(O_MK)) $@;)
else

all : 
	echo '#define HTS_VERSION "1.5"' > ./htslib-1.5/version.h
	echo '#define BCFTOOLS_VERSION "1.5"' >> ./htslib-1.5/version.h

	echo '/* Basic config.h generated by Makefile */' > config.h
ifneq "$(PLUGINS_ENABLED)" "no"
	echo '#define ENABLE_BCF_PLUGINS 1' >> config.h
	echo '#define PLUGIN_EXT ".so"' >> config.h
endif

	echo '/* Default config.h generated by Makefile */' > ./htslib-1.5/config.h
	echo '#define HAVE_LIBBZ2 1' >> ./htslib-1.5/config.h
	echo '#define HAVE_LIBLZMA 1' >> ./htslib-1.5/config.h

	$(foreach U_MK, $(ALL_UNTRUSTED_MK), $(MAKE) -C $(shell dirname $(U_MK))  -f $(shell basename $(U_MK)) $@;)
	$(foreach T_MK, $(ALL_TRUSTED_MK), $(MAKE) -C $(shell dirname $(T_MK))    -f $(shell basename $(T_MK)) $@;)
	$(foreach U_MK, $(ALL_STATIC_MK), $(MAKE) -C $(shell dirname $(U_MK))  -f $(shell basename $(U_MK)) $@;)

clean:
	$(foreach U_MK, $(ALL_UNTRUSTED_MK), $(MAKE) -C $(shell dirname $(U_MK))  -f $(shell basename $(U_MK)) $@;)
	$(foreach T_MK, $(ALL_TRUSTED_MK), $(MAKE) -C $(shell dirname $(T_MK))    -f $(shell basename $(T_MK)) $@;)
	$(foreach U_MK, $(ALL_STATIC_MK), $(MAKE) -C $(shell dirname $(U_MK))  -f $(shell basename $(U_MK)) $@;)
	rm -f ./htslib-1.5/version.h
	rm -f config.h
	rm -f htslib-1.5/config.h

endif

ifeq ($(Build_Mode), ORIGIN_BUILD)
run:
	$(foreach O_MK, $(ALL_ORIGIN_MK), $(MAKE) -C $(shell dirname $(O_MK))  -f $(shell basename $(O_MK)) $@;)
else
run:
	$(foreach U_MK, $(ALL_UNTRUSTED_MK), $(MAKE) -C $(shell dirname $(U_MK))   -f $(shell basename $(U_MK)) $@;)
endif